user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    #gzip  on;

    map $http_accept $content_type_suffix {
        default ".json";
        "~*application/json" ".json";
        "~*application/ld\+json" ".jsonld";
    }

    server {
        listen       80;
        server_name  localhost;
        default_type application/json;

        location ~ (?<basePath>/[\w\d/\-]+)(?<ext>\.[\w\d\-]+)?$ {
            root   /usr/share/nginx/html;
            index  index.json;

            # basic CORS setup
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';

            # add cache headers
            add_header 'Cache-Control' 'no-store';
            # add_header 'Cache-Control' 'public, max-age=15';


            ## Link headers for resource and representation metadata
            ## 
            try_files $uri $uri$content_type_suffix =404;

            # emit link headers
            add_header Link "<$scheme://$http_host$basePath.jsonld>; type=\"application/jsonld\"; rel=\"alternate\",
            <$scheme://$http_host$uri>; rel=\"canonical\",
            <$scheme://$http_host$basePath>; rel=\"about\"";

            # Add Vary header to support server-driven content negotiation
            add_header Vary 'Content-Type';
        }
    }
}
